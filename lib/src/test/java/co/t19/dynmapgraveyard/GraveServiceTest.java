/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package co.t19.dynmapgraveyard;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.UUID;

import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.entity.Player;
import org.dynmap.markers.Marker;
import org.dynmap.markers.MarkerIcon;
import org.dynmap.markers.MarkerSet;

@ExtendWith(MockitoExtension.class)
class GraveServiceTest {

  static final String PLAYER_ID = "e678b909-58ce-4fff-aa00-bcb50ab95a51";
  static final String PLAYER_LIST_NAME = "player";
  static final String WORLD_NAME = "world";

  @Mock
  private MarkerIcon markerIcon;

  @Mock
  private MarkerSet markerSet;
  @Mock
  private Marker marker;

  @Mock
  private Player player;
  private Location playerLocation;
  @Mock
  private World playerWorld;

  @BeforeEach
  void setup() {
    when(playerWorld.getName()).thenReturn(WORLD_NAME);
    playerLocation = new Location(playerWorld, 50, 40, 30);
    when(player.getLocation()).thenReturn(playerLocation);
    when(player.getUniqueId()).thenReturn(UUID.fromString(PLAYER_ID));
  }

  @Test
  void itCreatesNewMarkerOnFirstDeath() {
    when(player.getPlayerListName()).thenReturn(PLAYER_LIST_NAME);
    when(markerSet.findMarker(PLAYER_ID)).thenReturn(null);

    final var service = new GraveService(markerIcon, markerSet);
    service.updateGrave(player);
    verify(markerSet).createMarker(PLAYER_ID, "player's grave", WORLD_NAME, 50, 40, 30, markerIcon, false);
  }

  @Test
  void itUpdatesMarkerOnSubsequentDeath() {
    when(markerSet.findMarker(PLAYER_ID)).thenReturn(marker);

    final var service = new GraveService(markerIcon, markerSet);
    service.updateGrave(player);
    verify(marker).setLocation(WORLD_NAME, 50, 40, 30);
  }

}
